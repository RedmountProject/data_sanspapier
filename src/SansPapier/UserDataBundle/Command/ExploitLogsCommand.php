<?php

namespace SansPapier\UserDataBundle\Command;

use Symfony\Bundle\FrameworkBundle\Command\ContainerAwareCommand;
use Symfony\Component\Console\Input\InputArgument;
use Symfony\Component\Console\Input\InputInterface;
use Symfony\Component\Console\Input\InputOption;
use Symfony\Component\Console\Output\OutputInterface;
use SansPapier\UserDataBundle\Entity\LogAction;

/**
 * Description of GetSourceDataCommand
 *
 * @author nunja
 */
class ExploitLogsCommand extends ContainerAwareCommand
{

  protected function configure()
  {
    $this->setName('sanspapier:logs:exploit')
     ->setDescription('exploit user logs');
  }

  protected function execute(InputInterface $input, OutputInterface $output)
  {
    $output->writeln("Init logs recuperation");
    $em = $this->getContainer()->get('doctrine')->getEntityManager('user');
    $logRepo = $em->getRepository('SansPapierUserDataBundle:LogAction');
    $fp = fopen("/var/www/data_sanspapier/app/sp_logs/user_logs.txt", 'w');
    $logs = $logRepo->findAll();
    $previousIp = null;
    foreach($logs as $log)
    {
        $currentIp = $log->getIpAddress();
        if($currentIp != $previousIp)
        {
            $previousIp = $currentIp;
            $writing = fwrite($fp,PHP_EOL."---------------------------------------------------------------".PHP_EOL);
            $writing = fwrite($fp,"-------------------- ".$currentIp." ---------------------------".PHP_EOL);
            $writing = fwrite($fp,"---------------------------------------------------------------".PHP_EOL);
        }
        $writing = fwrite($fp,date_format($log->getCreatedAt(), 'Y-m-d H:i:s')." ".$log->getAction().PHP_EOL);
    }
    $output->writeln("Find the logs in /var/www/data_sanspapier/app/sp_logs/user_logs.txt");
  }

}

?>
